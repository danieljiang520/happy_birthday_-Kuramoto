clc;clear;close all;

% File names for the CSV files
filename1 = 'default.csv';  % File for pitch data
filename2 = 'quick.csv';  % File for rhythm data

% Read data from the CSV files
data1 = readtable(filename1, 'ReadVariableNames', false);
data2 = readtable(filename2, 'ReadVariableNames', false);

% Extract theta values for each oscillator from both files
theta1_pitch = data1.Var1 * 10;
theta2_pitch = data1.Var2 * 10;
theta3_pitch = data1.Var3 * 10;

theta1_rhythm = data2.Var1;
theta2_rhythm = data2.Var2;
theta3_rhythm = data2.Var3;

% Compute the sine of theta values for pitch to use as the Z coordinate
sin_theta1_pitch = sin(theta1_pitch);
sin_theta2_pitch = sin(theta2_pitch);
sin_theta3_pitch = sin(theta3_pitch);

% Number of points (assumes both files have the same length)
numPoints = height(data1); 

% Create a figure for plotting
figure;

% Set up the plot for animation
hold on;
axis equal;
xlabel('Cosine Rhythm');
ylabel('Sine Rhythm');
zlabel('Sine Pitch');
title('3D Visualization of Synchronization');
grid on;
view(3);  % Adjust the view to a 3D perspective

% Prepare for animation
for k = 700:800
    % Clear previous points for animation clarity
%     cla;

    % Plot unit circle in the rhythm plane
    theta = linspace(0, 2*pi, 100);
    plot3(cos(theta), sin(theta), zeros(size(theta)), 'k--'); % Circle at z=0

    % Plot each oscillator's position
    plot3(cos(theta1_rhythm(k)), sin(theta1_rhythm(k)), sin_theta1_pitch(k), 'ro');
    plot3(cos(theta2_rhythm(k)), sin(theta2_rhythm(k)), sin_theta2_pitch(k), 'go');
    plot3(cos(theta3_rhythm(k)), sin(theta3_rhythm(k)), sin_theta3_pitch(k), 'bo');

    % Enhance the plot for each frame
    legend('Unit Circle', 'Oscillator 1', 'Oscillator 2', 'Oscillator 3', 'Location', 'bestoutside');
    pause(0.05); % Pause to create animation effect

    % Axis limits
    xlim([-1.5 1.5]);
    ylim([-1.5 1.5]);
    zlim([-1.5 1.5]);
end

hold off;